

find :不加路径，默认为当前路径。加路径，搜索路径下的所有子文件夹。
      如果需要按文件名搜索，请使用-name参数

find：如何查找目录名呢？ 在根目录下，直接把要查找的目录名作为路径就好了

Ctrl+H 退格键，向前删除一个字符 

????find :如何搜索 .vim，就是隐藏文件?

1.  只排除一个目录或者文件，如查找/tmp/ 目录下文件名为shell的文件, 并且不包含目录123

    find  /tmp/   -path "/tmp/123" -prune -o -name shell  -print

复制代码
2. 排除两个或者多个目录或者文件，如查找/tmp/ 目录下所有文件（不包含目录）, 并且不包含目录123和目录234和目录345

    find  /tmp/ \( -path "/tmp/123" -o -path "/tmp/234" -o -path "/tmp/345" \) -prune -o -type f -print

复制代码
注意，如果是查找目录时，-path 后面的目录名一定不要带/  如 写成  -path "/tmp/123/" 就错了，而查找文件时，带/ 没有问题。


***********************************************************************
Ctrl + c：键盘中断请求。

Ctrl + s & Ctrl + q：暂停/恢复屏幕输出

Ctrl + n(↓)：显示下一条命令

Ctrl + p(↑)：显示上一条命令

Ctrl + b：向回移动

Ctrl + f： 向前移动

Ctrl + shift +↓：终端向下滚动

Ctrl + shift +↑：终端向上滚动

Shift+pgup/pgdown：终端上下翻页滚动
Ctrl+H 退格键，向前删除一个字符 



*********************************************************************
bash快捷键：
Ctrl+U 向前删除直到行首 

Ctrl+W 执行向前删除，直到前一个字符是空格（其它类空格字符？） 
Ctrl+H 退格键，向前删除一个字符 
生活在 Bash shell 中，熟记以下快捷键，将极大的提高你的命令行操作效率。
编辑命令

    Ctrl + a ：移到命令行首
    Ctrl + e ：移到命令行尾
    Ctrl + f ：按字符前移（右向）
    Ctrl + b ：按字符后移（左向）
    Alt + f ：按单词前移（右向）
    Alt + b ：按单词后移（左向）
    Ctrl + xx：在命令行首和光标之间移动
    Ctrl + u ：从光标处删除至命令行首
    Ctrl + k ：从光标处删除至命令行尾
    Ctrl + w ：从光标处删除至字首
    Alt + d ：从光标处删除至字尾
    Ctrl + d ：删除光标处的字符
    Ctrl + h ：删除光标前的字符
    Ctrl + y ：粘贴至光标后
    Alt + c ：从光标处更改为首字母大写的单词
    Alt + u ：从光标处更改为全部大写的单词
    Alt + l ：从光标处更改为全部小写的单词
    Ctrl + t ：交换光标处和之前的字符
    Alt + t ：交换光标处和之前的单词
    Alt + Backspace：与 Ctrl + w ~~相同~~类似，分隔符有些差别 [感谢 rezilla 指正]

重新执行命令

    Ctrl + r：逆向搜索命令历史
    Ctrl + g：从历史搜索模式退出
    Ctrl + p：历史中的上一条命令
    Ctrl + n：历史中的下一条命令
    Alt + .：使用上一条命令的最后一个参数

控制命令

    Ctrl + l：清屏
    Ctrl + o：执行当前命令，并选择上一条命令
    Ctrl + s：阻止屏幕输出
    Ctrl + q：允许屏幕输出
    Ctrl + c：终止命令
    Ctrl + z：挂起命令

Bang (!) 命令

    !!：执行上一条命令
    !blah：执行最近的以 blah 开头的命令，如 !ls
    !blah:p：仅打印输出，而不执行
    !$：上一条命令的最后一个参数，与 Alt + . 相同
    !$:p：打印输出 !$ 的内容
    !*：上一条命令的所有参数
    !*:p：打印输出 !* 的内容
    ^blah：删除上一条命令中的 blah
    ^blah^foo：将上一条命令中的 blah 替换为 foo
    ^blah^foo^：将上一条命令中所有的 blah 都替换为 foo

_友情提示_：

    以上介绍的大多数 Bash 快捷键仅当在 emacs 编辑模式时有效，若你将 Bash 配置为 vi 编辑模式，那将遵循 vi 的按键绑定。Bash 默认为 emacs 编辑模式。如果你的 Bash 不在 emacs 编辑模式，可通过 set -o emacs 设置。

    ^S、^Q、^C、^Z 是由终端设备处理的，可用 stty 命令设置。


******************************************************************
